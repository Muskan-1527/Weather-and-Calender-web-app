{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Weather-and-Calender-web-app\\\\weather_and_calender_web_app\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Weather from './weather_app_component/weather_component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from './weather_app_component/weather_form_component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n\n      if (country && city) {\n        const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=8f6e7eafbcaceee6b0fd1759888a64c7\"));\n        const response = await api_call.json();\n        console.log(response);\n        this.setState({\n          city: response.name,\n          country: response.sys.country,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description,\n          humidity: response.main.humidity,\n          pressure: response.main.pressure,\n          error: false\n        });\n        console.log(response);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      humidity: undefined,\n      pressure: undefined,\n      error: false\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      humidity: this.state.humidity,\n      pressure: this.state.pressure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\Weather-and-Calender-web-app\\weather_and_calender_web_app\\src\\App.js"],"names":["React","Weather","Form","App","Component","constructor","getWeather","e","preventDefault","country","target","elements","value","city","api_call","fetch","response","json","console","log","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","humidity","pressure","error","state","undefined","cell","Math","floor","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Weather from './weather_app_component/weather_component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from './weather_app_component/weather_form_component';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country:undefined,\n      main:undefined,\n      celsius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      humidity:undefined,\n      pressure:undefined,\n      error:false\n    };\n  }\n\n\n  calCelsius(temp){\n    let cell=Math.floor(temp-273.15);\n    return cell;\n  }\n  \n\n  getWeather = async e => {\n\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if(country && city){\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=8f6e7eafbcaceee6b0fd1759888a64c7`\n      );\n  \n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city:response.name,\n      country:response.sys.country,\n      celsius:this.calCelsius(response.main.temp),\n      temp_max:this.calCelsius(response.main.temp_max),\n      temp_min:this.calCelsius(response.main.temp_min),\n      description:response.weather[0].description,\n      humidity:response.main.humidity,\n      pressure:response.main.pressure,\n      error: false\n    });\n    console.log(response);\n  }else {\n    this.setState({\n      error:true\n    });\n  }\n  \n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error}/>\n      <Weather \n      city={this.state.city} \n      country={this.state.country} \n      temp_celsius={this.state.celsius}\n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      humidity={this.state.humidity}\n      pressure={this.state.pressure}\n      />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}