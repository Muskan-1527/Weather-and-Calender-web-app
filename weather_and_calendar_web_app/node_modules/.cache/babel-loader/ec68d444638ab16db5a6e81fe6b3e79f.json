{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Weather-and-Calender-web-app\\\\weather_and_calender_web_app\\\\src\\\\weather_app.js\";\nimport React from 'react';\nimport Weather from './weather_app_component/weather_component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass WeatherApp extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n      e.preventDefault();\n\n      if (country && city) {\n        const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/forecast/daily?q=\".concat(city, \",\").concat(country, \"&APPID=c10e7100063f10864ba3ffb839aed7f3\"));\n        const response = await api_call.json();\n        this.setState({\n          city: response.city.name,\n          country: response.city.country,\n          celsius: this.calCelsius(response.list[0].temp.day),\n          temp_max: this.calCelsius(response.list[0].temp.max),\n          temp_min: this.calCelsius(response.list[0].temp.min),\n          description: response.list[0].weather[0].description,\n          humidity: response.list[0].humidity,\n          pressure: response.list[0].pressure,\n          icon: response.list[0].weather[0].icon,\n          description1: response.list[1].weather[0].description,\n          description2: response.list[2].weather[0].description,\n          description3: response.list[3].weather[0].description,\n          icon1: response.list[1].weather[0].icon,\n          icon2: response.list[2].weather[0].icon,\n          icon3: response.list[3].weather[0].icon,\n          temp_max1: this.calCelsius(response.list[0].temp.max),\n          temp_min1: this.calCelsius(response.list[0].temp.min),\n          temp_max2: this.calCelsius(response.list[0].temp.max),\n          temp_min2: this.calCelsius(response.list[0].temp.min),\n          temp_max3: this.calCelsius(response.list[0].temp.max),\n          temp_min3: this.calCelsius(response.list[0].temp.min),\n          sunrise: response.list[0].sunrise,\n          sunset: response.list[0].sunset,\n          windspeed: response.list[0].weather[1],\n          error: false\n        });\n        this.getWeatherImage(response.list[0].weather[0].id);\n        console.log(response);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      humidity: undefined,\n      pressure: undefined,\n      icon: undefined,\n      description1: undefined,\n      description2: undefined,\n      description3: undefined,\n      icon1: undefined,\n      icon2: undefined,\n      icon3: undefined,\n      temp_max1: undefined,\n      temp_min1: undefined,\n      temp_max2: undefined,\n      temp_min2: undefined,\n      temp_max3: undefined,\n      temp_min3: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      windspeed: undefined,\n      src: '/all_weather.jpg',\n      error: false\n    };\n  }\n\n  getWeatherImage(ID) {\n    switch (true) {\n      case ID >= 200 && ID <= 232:\n        this.setState({\n          src: '/thunderstorm.jpg'\n        });\n        break;\n\n      case ID >= 300 && ID <= 321:\n        this.setState({\n          src: '/drizzle.jpg'\n        });\n        break;\n\n      case ID >= 500 && ID <= 531:\n        this.setState({\n          src: '/rain.jpg'\n        });\n        break;\n\n      case ID >= 600 && ID <= 622:\n        this.setState({\n          src: '/snow.jpg'\n        });\n        break;\n\n      case ID >= 701 && ID <= 781:\n        this.setState({\n          src: '/atmosphere.jpg'\n        });\n        break;\n\n      case ID === 800:\n        this.setState({\n          src: '/clear_sky.jpg'\n        });\n        break;\n\n      case ID >= 801 && ID <= 804:\n        this.setState({\n          src: '/clouds.jpg'\n        });\n        break;\n\n      default:\n        this.setState({\n          src: '/all_weather.jpg'\n        });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      humidity: this.state.humidity,\n      pressure: this.state.pressure,\n      icon: this.state.icon,\n      description1: this.state.description1,\n      description2: this.state.description2,\n      description3: this.state.description3,\n      icon1: this.state.icon1,\n      icon2: this.state.icon2,\n      icon3: this.state.icon3,\n      temp_max1: this.state.temp_max1,\n      temp_min1: this.state.temp_min1,\n      temp_max2: this.state.temp_max2,\n      temp_min2: this.state.temp_min2,\n      temp_max3: this.state.temp_max3,\n      temp_min3: this.state.temp_min3,\n      sunriseTime: this.state.sunrise,\n      sunsetTime: this.state.sunset,\n      windspeed: this.state.windspeed,\n      src: this.state.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WeatherApp;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\Weather-and-Calender-web-app\\weather_and_calender_web_app\\src\\weather_app.js"],"names":["React","Weather","WeatherApp","Component","constructor","getWeather","e","country","target","elements","value","city","preventDefault","api_call","fetch","response","json","setState","name","celsius","calCelsius","list","temp","day","temp_max","max","temp_min","min","description","weather","humidity","pressure","icon","description1","description2","description3","icon1","icon2","icon3","temp_max1","temp_min1","temp_max2","temp_min2","temp_max3","temp_min3","sunrise","sunset","windspeed","error","getWeatherImage","id","console","log","state","undefined","main","src","ID","cell","Math","floor","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Weather from './weather_app_component/weather_component';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass WeatherApp extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      city: undefined,\r\n      country:undefined,\r\n      main:undefined,\r\n      celsius:undefined,\r\n      temp_max:undefined,\r\n      temp_min:undefined,\r\n      description:\"\",\r\n      humidity:undefined,\r\n      pressure:undefined,\r\n      icon:undefined,\r\n      description1:undefined,\r\n      description2:undefined,\r\n      description3:undefined,\r\n      icon1:undefined,\r\n      icon2:undefined,\r\n      icon3:undefined,\r\n      temp_max1:undefined,\r\n      temp_min1:undefined,\r\n      temp_max2:undefined,\r\n      temp_min2:undefined,\r\n      temp_max3:undefined,\r\n      temp_min3:undefined,\r\n      sunrise:undefined,\r\n      sunset:undefined,\r\n      windspeed:undefined,\r\n      src:'/all_weather.jpg',\r\n      error:false\r\n    };\r\n  }\r\n\r\n  getWeatherImage(ID) {\r\n    switch(true) {\r\n        case ID>=200 && ID<=232:\r\n            this.setState({\r\n                src : '/thunderstorm.jpg'\r\n            });\r\n            break;\r\n        case ID>=300 && ID<=321:\r\n                this.setState({\r\n                    src : '/drizzle.jpg'\r\n                });\r\n            break;\r\n        case ID>=500 && ID<=531:\r\n                this.setState({\r\n                    src : '/rain.jpg'\r\n                });\r\n            break;\r\n        case ID>=600 && ID<=622:\r\n                this.setState({\r\n                    src : '/snow.jpg'\r\n                });\r\n                break;\r\n        case ID>=701 && ID<=781:\r\n                this.setState({\r\n                    src : '/atmosphere.jpg'\r\n                });\r\n            break;\r\n        case ID===800:\r\n                this.setState({\r\n                    src : '/clear_sky.jpg'\r\n                });\r\n            break;\r\n        case ID>=801 && ID<=804:\r\n                this.setState({\r\n                    src : '/clouds.jpg'\r\n                });\r\n            break;\r\n      default:\r\n        this.setState({\r\n          src : '/all_weather.jpg'\r\n        });\r\n    }\r\n}\r\n\r\n\r\n  calCelsius(temp){\r\n    let cell=Math.floor(temp-273.15);\r\n    return cell;\r\n  }\r\n  \r\n\r\n  getWeather = async e => {\r\n\r\n    const country = e.target.elements.country.value;\r\n    const city = e.target.elements.city.value;\r\n\r\n      e.preventDefault();\r\n\r\n    if(country && city){\r\n    const api_call = await fetch(\r\n      `http://api.openweathermap.org/data/2.5/forecast/daily?q=${city},${country}&APPID=c10e7100063f10864ba3ffb839aed7f3`\r\n      );\r\n  \r\n    const response = await api_call.json();\r\n\r\n    this.setState({\r\n      city:response.city.name,\r\n      country:response.city.country,\r\n      celsius:this.calCelsius(response.list[0].temp.day),\r\n      temp_max:this.calCelsius(response.list[0].temp.max),\r\n      temp_min:this.calCelsius(response.list[0].temp.min),\r\n      description:response.list[0].weather[0].description,\r\n      humidity:response.list[0].humidity,\r\n      pressure:response.list[0].pressure,\r\n      icon:response.list[0].weather[0].icon,\r\n      description1:response.list[1].weather[0].description,\r\n      description2:response.list[2].weather[0].description,\r\n      description3:response.list[3].weather[0].description,\r\n      icon1:response.list[1].weather[0].icon,\r\n      icon2:response.list[2].weather[0].icon,\r\n      icon3:response.list[3].weather[0].icon,\r\n      temp_max1:this.calCelsius(response.list[0].temp.max),\r\n      temp_min1:this.calCelsius(response.list[0].temp.min),\r\n      temp_max2:this.calCelsius(response.list[0].temp.max),\r\n      temp_min2:this.calCelsius(response.list[0].temp.min),\r\n      temp_max3:this.calCelsius(response.list[0].temp.max),\r\n      temp_min3:this.calCelsius(response.list[0].temp.min),\r\n      sunrise:response.list[0].sunrise,\r\n      sunset:response.list[0].sunset,\r\n      windspeed:response.list[0].weather[1],\r\n      error: false\r\n    });\r\n    this.getWeatherImage(response.list[0].weather[0].id);\r\n    console.log(response);\r\n  }else {\r\n    this.setState({\r\n      error:true\r\n    });\r\n  }\r\n  \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n      <Weather \r\n      loadweather={this.getWeather} error={this.state.error} \r\n      city={this.state.city} \r\n      country={this.state.country} \r\n      temp_celsius={this.state.celsius}\r\n      temp_max={this.state.temp_max}\r\n      temp_min={this.state.temp_min}\r\n      description={this.state.description}\r\n      humidity={this.state.humidity}\r\n      pressure={this.state.pressure}\r\n      icon={this.state.icon}\r\n      description1={this.state.description1}\r\n      description2={this.state.description2}\r\n      description3={this.state.description3}\r\n      icon1={this.state.icon1}\r\n      icon2={this.state.icon2}\r\n      icon3={this.state.icon3}\r\n      temp_max1={this.state.temp_max1}\r\n      temp_min1={this.state.temp_min1}\r\n      temp_max2={this.state.temp_max2}\r\n      temp_min2={this.state.temp_min2}\r\n      temp_max3={this.state.temp_max3}\r\n      temp_min3={this.state.temp_min3}\r\n      sunriseTime={this.state.sunrise}\r\n      sunsetTime={this.state.sunset}\r\n      windspeed={this.state.windspeed}\r\n      src={this.state.src}\r\n      />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default WeatherApp;\r\n"]},"metadata":{},"sourceType":"module"}