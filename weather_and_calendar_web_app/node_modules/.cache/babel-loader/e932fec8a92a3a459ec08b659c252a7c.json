{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Weather-and-Calender-web-app\\\\weather_and_calender_web_app\\\\src\\\\weather_app_component\\\\weather_background_image.js\";\nimport React from \"react\";\n\nclass BackgroundImage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      src: undefined,\n      alt: undefined\n    };\n  }\n\n  getWeatherImage() {\n    const ID = this.props.Idrange;\n    console.log(ID);\n\n    switch (true) {\n      case ID >= 200 && ID <= 232:\n        this.setstate({\n          src: \"../assets/thunderstorm.jpg\",\n          alt: \"weatherimage\"\n        });\n        break;\n\n      case ID >= 300 && ID <= 321:\n        this.setstate({\n          src: \"../assets/drizzle.jpg\",\n          alt: \"weatherimage\"\n        });\n        break;\n\n      case ID >= 500 && ID <= 531:\n        this.setstate({\n          src: \"../assets/rain.jpg\",\n          alt: \"weatherimage\"\n        });\n        break;\n\n      case ID >= 600 && ID <= 622:\n        this.setstate({\n          src: \"../assets/snow.jpg\",\n          alt: \"weatherimage\"\n        });\n\n      case ID >= 701 && ID <= 781:\n        this.setstate({\n          src: \"../assets/atmosphere.jpg\",\n          alt: \"weatherimage\"\n        });\n        break;\n\n      case ID == 800:\n        this.setstate({\n          src: \"../assets/clear_sky.jpg\",\n          alt: \"weatherimage\"\n        });\n        break;\n\n      case ID >= 801 && ID <= 804:\n        this.setstate({\n          src: \"../assets/clouds.jpg\",\n          alt: \"weatherimage\"\n        });\n        break;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-fluid\",\n      src: this.state.src,\n      alt: this.state.alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BackgroundImage;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\Weather-and-Calender-web-app\\weather_and_calender_web_app\\src\\weather_app_component\\weather_background_image.js"],"names":["React","BackgroundImage","Component","state","src","undefined","alt","getWeatherImage","ID","props","Idrange","console","log","setstate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACJC,MAAAA,GAAG,EAAGC,SADF;AAEJC,MAAAA,GAAG,EAAGD;AAFF,KAFsC;AAAA;;AAMzCE,EAAAA,eAAe,GAAG;AACd,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,OAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;;AACD,YAAO,IAAP;AACI,WAAKA,EAAE,IAAE,GAAJ,IAAWA,EAAE,IAAE,GAApB;AACI,aAAKK,QAAL,CAAc;AACVT,UAAAA,GAAG,EAAG,4BADI;AAEVE,UAAAA,GAAG,EAAG;AAFI,SAAd;AAIA;;AACJ,WAAKE,EAAE,IAAE,GAAJ,IAAWA,EAAE,IAAE,GAApB;AACQ,aAAKK,QAAL,CAAc;AACVT,UAAAA,GAAG,EAAG,uBADI;AAEVE,UAAAA,GAAG,EAAG;AAFI,SAAd;AAIJ;;AACJ,WAAKE,EAAE,IAAE,GAAJ,IAAWA,EAAE,IAAE,GAApB;AACQ,aAAKK,QAAL,CAAc;AACVT,UAAAA,GAAG,EAAG,oBADI;AAEVE,UAAAA,GAAG,EAAG;AAFI,SAAd;AAIJ;;AACJ,WAAKE,EAAE,IAAE,GAAJ,IAAWA,EAAE,IAAE,GAApB;AACQ,aAAKK,QAAL,CAAc;AACVT,UAAAA,GAAG,EAAG,oBADI;AAEVE,UAAAA,GAAG,EAAG;AAFI,SAAd;;AAIR,WAAKE,EAAE,IAAE,GAAJ,IAAWA,EAAE,IAAE,GAApB;AACQ,aAAKK,QAAL,CAAc;AACVT,UAAAA,GAAG,EAAG,0BADI;AAEVE,UAAAA,GAAG,EAAG;AAFI,SAAd;AAIJ;;AACJ,WAAKE,EAAE,IAAE,GAAT;AACQ,aAAKK,QAAL,CAAc;AACVT,UAAAA,GAAG,EAAG,yBADI;AAEVE,UAAAA,GAAG,EAAG;AAFI,SAAd;AAIJ;;AACJ,WAAKE,EAAE,IAAE,GAAJ,IAAWA,EAAE,IAAE,GAApB;AACQ,aAAKK,QAAL,CAAc;AACVT,UAAAA,GAAG,EAAG,sBADI;AAEVE,UAAAA,GAAG,EAAG;AAFI,SAAd;AAIJ;AAzCR;AA2CH;;AAEDQ,EAAAA,MAAM,GAAI;AACN,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAI,KAAKX,KAAL,CAAWC,GAA7C;AAAkD,MAAA,GAAG,EAAI,KAAKD,KAAL,CAAWG,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADD;AAKH;;AA5DyC;;AAgE9C,eAAeL,eAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass BackgroundImage extends React.Component {\r\n   \r\nstate = {\r\n    src : undefined,\r\n    alt : undefined\r\n    }\r\n     getWeatherImage() {\r\n         const ID = this.props.Idrange;\r\n         console.log(ID);\r\n        switch(true) {\r\n            case ID>=200 && ID<=232:\r\n                this.setstate({\r\n                    src : \"../assets/thunderstorm.jpg\",\r\n                    alt : \"weatherimage\"\r\n                });\r\n                break;\r\n            case ID>=300 && ID<=321:\r\n                    this.setstate({\r\n                        src : \"../assets/drizzle.jpg\",\r\n                        alt : \"weatherimage\"\r\n                    });\r\n                break;\r\n            case ID>=500 && ID<=531:\r\n                    this.setstate({\r\n                        src : \"../assets/rain.jpg\",\r\n                        alt : \"weatherimage\"\r\n                    });\r\n                break;\r\n            case ID>=600 && ID<=622:\r\n                    this.setstate({\r\n                        src : \"../assets/snow.jpg\",\r\n                        alt : \"weatherimage\"\r\n                    });\r\n            case ID>=701 && ID<=781:\r\n                    this.setstate({\r\n                        src : \"../assets/atmosphere.jpg\",\r\n                        alt : \"weatherimage\"\r\n                    });\r\n                break;\r\n            case ID==800:\r\n                    this.setstate({\r\n                        src : \"../assets/clear_sky.jpg\",\r\n                        alt : \"weatherimage\"\r\n                    });\r\n                break;\r\n            case ID>=801 && ID<=804:\r\n                    this.setstate({\r\n                        src : \"../assets/clouds.jpg\",\r\n                        alt : \"weatherimage\"\r\n                    });\r\n                break;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n         <div>\r\n             <img className=\"img-fluid\" src = {this.state.src} alt = {this.state.alt}/>\r\n         </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BackgroundImage;"]},"metadata":{},"sourceType":"module"}